<h1>About</h1>
<p>網頁(靜態)： <a href="https://mdewcm2024.github.io/1a-ag4/content/index.html">https://mdewcm2024.github.io/1a-ag4/content/index.html</a></p>
<p>網誌: 請填入目前網站所在的 URL/blog, <a href="https://mde.tw/cmsimde_site/blog">https://mde.tw/cmsimde_site/blog</a></p>
<p>簡報: 請填入目前網站所在的 URL/reveal, <a href="https://mde.tw/cmsimde_site/reveal">https://mde.tw/cmsimde_site/reveal</a></p>
<p>倉儲： <a href="https://github.com/mdewcm2024/1a-ag4">https://github.com/mdewcm2024/1a-ag4</a></p>
<p>本 cmsimde 網際內容管理系統的對應 Template 倉儲:</p>
<p style="padding-left: 30px;"><a href="https://github.com/mdecycu/cmsimde_site">https://github.com/mdecycu/cmsimde_site</a></p>
<p style="padding-left: 30px;">此 Template 將 cmsimde 作為子目錄而非子模組, 使用者可以依照需求自行修改</p>
<p style="padding-left: 30px;">倉儲對應網站: <a href="https://mde.tw/cmsimde_site">https://mde.tw/cmsimde_site</a></p>
<h1>W3</h1>
<p>在<a href="https://mde.tw/wcm2024/blog/wcm-1a-w3.html">WCM第三週</a>教學內容，整理重點。(都有放相關或參照連結)</p>
<p>1.關於<a href="https://hellojs-tw.github.io/git-101/cheat-sheet.html">git常用</a>指。</p>
<p>2.利用<a href="https://www.debugmode.com/wink.html">Wink</a>建立操作影片。(<a href="https://nfuedu-my.sharepoint.com/:u:/g/personal/41223118_nfu_edu_tw/EdhJ6v0ihThGu3Mwl2doZssBdb258_r7Bv_-ie0CCYEu8g?e=nFxGVv">安裝下載檔</a>)</p>
<p>3.如何使用<a href="https://blog.kennycoder.io/2020/06/14/Git-submodule-%E4%BD%BF%E7%94%A8%E6%95%99%E5%AD%B8/">submoduie</a>來創建個人子模組。(導師操作觀念<a href="https://nfuedu-my.sharepoint.com/personal/yen_nfu_edu_tw/_layouts/15/stream.aspx?id=%2Fpersonal%2Fyen%5Fnfu%5Fedu%5Ftw%2FDocuments%2F2024%2Fwcm2024%2Fvideo%2Fwcm2024%5F1a%5Fw3%5F2%5F%E5%B0%87%E7%B5%84%E5%93%A1%E7%9A%84%E5%80%8B%E4%BA%BA%E5%80%89%E5%84%B2%E7%B4%8D%E7%82%BA%E5%88%86%E7%B5%84%E5%80%89%E5%84%B2%E7%9A%84%E5%AD%90%E6%A8%A1%E7%B5%84%2Emp4&amp;nav=eyJyZWZlcnJhbEluZm8iOnsicmVmZXJyYWxBcHAiOiJPbmVEcml2ZUZvckJ1c2luZXNzIiwicmVmZXJyYWxBcHBQbGF0Zm9ybSI6IldlYiIsInJlZmVycmFsTW9kZSI6InZpZXciLCJyZWZlcnJhbFZpZXciOiJNeUZpbGVzTGlua0NvcHkifX0&amp;ga=1&amp;referrer=StreamWebApp%2EWeb&amp;referrerScenario=AddressBarCopied%2Eview">影片</a>)</p>
<p>4.說明如何使用replit維護網站。</p>
<p></p><h1>W4</h1>
<p>本周內容：</p>
<p><em><strong>1.</strong></em>複習<a href="https://mde.tw/wcm2024/blog/wcm-1a-w3.html">W3</a>上課內容。</p>
<p><em><strong>2.</strong></em><span>Replit靜態網站檢視，下載<a href="https://zhe41223118.github.io/wcm2024/downloads/main2.txt">main2.txt</a>和<a href="https://zhe41223118.github.io/wcm2024/downloads/static.txt">static.txt</a>取得main2.py和static.py，以便執行<span style="background-color: #ffff00;">python3 main2.py<span style="background-color: #ffffff;"> 就完成了。</span></span></span></p>
<p><span><strong><em>3.</em></strong>使用replit Codespaces Gitpod三種網頁維護 執行動態和靜態網站和設定存取權。</span></p>
<p><span><em><strong>4.</strong></em>使用<span style="background-color: #ffff00;"><strong>Replit</strong></span>分組網站建立權限，因為無法幫定多人以上的倉儲帳號，所以需要成員們自行在<span style="background-color: #ffff00;">/home/runner/.ssh</span> 目錄下建立<span style="background-color: #ffff00;"> id_rsa </span>與 <span style="background-color: #ffff00;">config</span>。<span style="background-color: #ccffcc;">(.ssh-keygen)</span></span></p>
<p><span><em><strong>5.</strong></em>先下載<a href="https://nfuedu-my.sharepoint.com/:u:/g/personal/41223118_nfu_edu_tw/EUlPn3lAo5ZPn9syR_xAbHsBhiSa_EULJtAInuSbwl4HhQ?e=EvGdqh">miktex-portable.7z</a>，期中 期末時需要用<strong>LaTeX</strong>建立各組的報告，</span></p>
<p><span><em><strong>6.</strong></em>需將以下資料做統整：</span></p>
<p><a href="https://github.com/git-guides">https://github.com/git-guides</a><span></span></p>
<p><a href="https://git-scm.com/book/zh-tw/v2">https://git-scm.com/book/zh-tw/v2</a></p>
<p><a href="https://git-scm.com/book/zh/v2">https://git-scm.com/book/zh/v2</a></p>
<p><a href="https://nfuedu-my.sharepoint.com/:b:/g/personal/41223118_nfu_edu_tw/EVwYFasax3lKjPdSV-s74eoBhxLEUSshrejySu9naK79FQ?e=FNt5SB">A Tutorial for GitHub.pdf</a></p>
<p><a href="https://docs.github.com/en/get-started/start-your-journey/git-and-github-learning-resources">github學習資源</a></p>
<p>統整結果請按<a href="https://mdewcm2024.github.io/1a-ag4/content/Git%20Tutorial.html">這裡</a>。</p>
<h1>W5</h1>
<p>事先預習上課<span style="background-color: #ffff00;">可能</span>會講解內容，了解<a href="https://www.tsg.com.tw/blog-detail4-324-0-iframe.htm">iframe</a><span>是什麼和<a href="https://pc.health999.net/book/frame.htm">相關應用</a>。</span></p>
<p><span>內容會以<span style="background-color: #ffff00;">iframe</span>來插入前幾周的教學影片，並摘要各影片內容。</span></p>
<p><span>---------------------------------------------------------------------------</span></p>
<p><span>1.Replit分組平台倉儲設定。</span></p>
<p><span></span></p>
<p><span>2.使用<a href="https://nfuedu-my.sharepoint.com/:u:/g/personal/41223118_nfu_edu_tw/ETIaH2KB2dxKjbJpkxS6kO4B4eo0QaeH3iW0rxUfqBMMng?e=cINExf">可攜檔</a>裡的<strong>Putty-solvespace.exe</strong>(<a href="https://www.adobe.com/hk_zh/creativecloud/file-types/image/vector/stl-file.html#%E4%BB%80%E9%BA%BC%E6%98%AF-stl-%E6%AA%94%E6%A1%88">STL</a>)，零件檢視方法。</span></p>
<p><span></span></p>
<p><span>3.使用近端可攜程式，維護更新自己及分組倉儲。</span></p>
<p><span></span></p>
<p>參考實作教學影片請到<a href="https://www.youtube.com/@-kmolab9376">youtube</a></p>
<h1>W6</h1>
<p>完成課程實作操作：</p>
<p><strong>1.</strong><span><span class="ui-provider a b c d e f g h i j k l m n o p q r s t u v w x y z ab ac ae af ag ah ai aj ak" dir="ltr">根據自己專業：</span></span></p>
<p><span><span class="ui-provider a b c d e f g h i j k l m n o p q r s t u v w x y z ab ac ae af ag ah ai aj ak" dir="ltr">   1-1.)說明<span style="background-color: #ffff00;"><strong>git</strong></span>的使用和與<span style="background-color: #ffff00;"><strong>ChatGPT</strong></span>的對話</span></span></p>
<p><span><span class="ui-provider a b c d e f g h i j k l m n o p q r s t u v w x y z ab ac ae af ag ah ai aj ak" dir="ltr">   1-2.)內容需含git發展歷史</span></span></p>
<p><span><span class="ui-provider a b c d e f g h i j k l m n o p q r s t u v w x y z ab ac ae af ag ah ai aj ak" dir="ltr">   1-3.)創作人的履歷</span></span></p>
<p><span><span class="ui-provider a b c d e f g h i j k l m n o p q r s t u v w x y z ab ac ae af ag ah ai aj ak" dir="ltr">   1-4.)一般相同專業人士如何利用git解決內容管理問題？</span></span></p>
<p><span><span class="ui-provider a b c d e f g h i j k l m n o p q r s t u v w x y z ab ac ae af ag ah ai aj ak" dir="ltr"><strong>2.</strong>如果想在Windows實際使用<span style="background-color: #ffff00;"><strong>demo git client</strong></span>與<span style="background-color: #ffff00;"><strong>git server</strong></span>，該如何進行？</span></span></p>
<p><span><span class="ui-provider a b c d e f g h i j k l m n o p q r s t u v w x y z ab ac ae af ag ah ai aj ak" dir="ltr"><strong>3.</strong>練習<span style="background-color: #ffff00;">git init到git push</span>，個人自己建立倉儲分支環境練習上傳推送，並處理合併問題。</span></span></p><h1>W7-W8</h1>
<p><strong>1.</strong>課程介紹教育的理念本質。</p>
<p><strong>2.</strong><span style="background-color: #ffff00;">影片嵌入</span>網站方法。</p>
<p><span></span>以超連結配合個人網站內的Source code 將影片複製後的超連結貼上，連結內有預設影片邊界 來源拉取等，除非想有特別需要調整，一般基本只要將其貼上即可。</p>
<p></p><h1>W9</h1>
<p></p><h1>W10</h1>
<p>以replit來維護新的分組倉儲，需要<span style="background-color: #ffff99;">應對問題為r</span><span><span style="background-color: #ffff99;">eplit的.shh協定無法供免費使用者使用</span>，已經透過github系統設定，現在可以直接在replit進行分組維護，</span></p>
<p><span>replit目前只剩下對於使用者的<a href="https://replit.com/usage">總資料儲存量</a>(10G)限制，當資源存取超過上限時，需要回到github下的對應倉儲帳號進行對應手段。</span></p>
<p><span>新的分組專案網站：<a href="https://github.com/mdewcm2024/1astud-site">https://github.com/mdewcm2024/1astud-site</a></span></p>
<p><span style="background-color: #00ff00;">(需在teams留言字串進行加入)</span></p><h1>W11-W12</h1><h1>W13</h1>
<h1>Git Tutorial</h1>
<p><strong><em>git是什麼？</em></strong></p>
<p><span>版本控制是一種記錄一個或若干<span style="color: #ff0000;">文件內容變化</span>，以便將來<span style="color: #ff0000;">查閱特定版本修訂情況</span>的系統。 </span></p>
<p><span></span></p>
<p><em><strong>為什麼要使用git？</strong></em></p>
<p>git 是指版本控制系統(Distributed Version Control)，然而他要用來做什麼呢?</p>
<p>git 具有以下優點：<br/><strong>1.</strong>速度</p>
<p><strong>2.</strong>簡單的設計</p>
<p><strong>3.</strong>對非線性開發模式的強力支持（允許成千上萬個併行開發的分支)</p>
<p><strong>4.</strong>完全分布式</p>
<p><strong>5.</strong>有能力高效管理類似 Linux 内核一樣的超大規模項目（速度和數據量）</p>
<p>而git 的用途就是<span style="color: #ff0000;">記錄每一個檔案的每次更新，防止被覆蓋或者遺失檔案告成損失。</span></p>
<p><span style="color: #ff0000;"></span></p>
<p><em><strong>git的優勢是什麼？</strong></em></p>
<p>有人把 Git 的分支模型稱為它的“必殺技特性”，也因為這一特性，使得 Git 從眾多版本控制系統中脫穎而出。 為何 Git 的分支模型如此出眾？ <span style="background-color: #ff0000; color: #ff0000;"><span style="background-color: #ffffff;">Git 處理分支的方式可謂是難以置信的輕量，創建新分支這一操作幾乎能在瞬間完成，並且在不同分支之間的切換操作也是一樣便捷。 與許多其它版本控制系統不同，Git 鼓勵在工作流程中頻繁地使用分支與合併，即使在一天之內進行許多次。</span></span> 理解並精通這一特性，你便會意識到 Git 是如此的強大而又獨特，並且從此真正改變你的開發方式。</p>
<p></p>
<p><em><strong>git的使用？</strong></em></p>
<p>git有以下幾點的功能</p>
<p><strong>1.</strong>查看遠端倉儲</p>
<p><strong>2.</strong>添加遠端倉儲</p>
<p><strong>3.</strong>從遠端倉儲中抓取與拉取</p>
<p><strong>4.</strong>推送到遠端倉儲</p>
<p><strong>5.</strong>查看某個遠端倉儲</p>
<p><strong>6.</strong>遠端倉儲的重命名與刪除</p>
<p></p>
<p><em><strong>git 的指令？</strong></em></p>
<p>git常用指令有：</p>
<p><span style="background-color: #ffff00;">git add .</span><span> </span>(新增)</p>
<p><span><span style="background-color: #ffff00;">git commit -m</span> "內容"</span>  (提交及名稱)</p>
<p><span style="background-color: #ffff00;">git </span><span><span style="background-color: #ffff00;">push</span> (推送)</span></p>
<p><span><span style="background-color: #ffff00;">git version</span> (查詢目前所使用的 git 版本)</span></p>
<p><span><span style="background-color: #ffff00;">git status</span> (一般是用來檢查目前近端改版情況)</span></p>
<p>若在遠端倉儲已經改版了，就必須先<span><span style="background-color: #ffff00;">git pull</span>，將遠端資訊與自己的合併更新，才能在提交新的版本推送至倉儲。</span></p>
<p><span>git pull=git fetch + git merge</span></p>
<p><span><a href="https://nulab.com/zh-tw/learn/software-development/git-tutorial/git-collaboration/remote-branches/fetching-remote-branches/">git fetch</a> (將遠端主機的最新內容拉到本地)，<a href="https://johnnywang1994.github.io/book/articles/git/merge.html">git merge</a> (用於從指定的commit合併到當前分支)</span></p>
<p><span><span style="background-color: #ffff00;">git submodule add</span> 自己倉儲網址.git+學號</span><span> (新增分組倉儲的子模組)</span></p>
<p><span>git clone --recurse-submodules (.git 指定目錄與否)</span></p>
<p><span></span></p>
<p><em><strong>git總結:</strong></em></p>
<p><strong>1.</strong>版本控制:<span>Git允許您輕鬆地追蹤和管理代碼的變化，可以更容易回退到先前版本或比較不同版本之間的差異。</span></p>
<p><span><strong>2.</strong>多人協作與合併:多人協作時，Git使得合併不同的分支變得更加容易和安全。</span></p>
<p><span><strong>3.</strong>分支管理:可以輕鬆創建、合併或刪除分支。</span></p>
<p><span><strong>4.</strong>遠程儲存和共享:可將代碼庫儲存在git，可使共享代碼儲存更加方便</span></p>
<p><span><strong>5.</strong>個人化配置:git內建許多配置選項，可根據自己的需求進行配置</span></p>
<p></p>
<p></p><h1>cmsimde</h1>
<p><span style="background-color: #ccffcc;">SMap</span> - SiteMap - 依照階次列出網站的所有頁面.</p>
<p><span style="background-color: #ccffcc;">EditA</span> - Edit All page - 將所有頁面放入編輯模式中, 主要用來處理頁面搬遷, 刪除或決定衝突頁面內容版本.</p>
<p><span style="background-color: #ccffcc;">Edit</span> - Edit page - 先選擇要編輯的單一頁面後, 再點選 Edit, 即可進入單一頁面的編輯模式.</p>
<p><span style="background-color: #ccffcc;">Config</span> - Configure Site - 編輯頁面標題與管理者密碼.</p>
<p><span style="background-color: #ccffcc;">Search</span> - 動態頁面內容的關鍵字搜尋.</p>
<p><span style="background-color: #ccffcc;">IUpload</span> - Image file Upload - 圖檔的上傳功能, 可以上傳 jpg, png 與 gif 檔案, 其中若在手機上傳圖檔, 系統會自動將圖片檔案縮小為 800x800 大小.</p>
<p><span style="background-color: #ccffcc;">IList</span> - Image file List - 列出可以直接在頁面編輯模式中引用的圖片檔案.</p>
<p><span style="background-color: #ccffcc;">FUpload</span> - File Upload - 一般檔案的上傳功能, 目前可以上傳的檔案副檔名包括 'jpg', 'png', 'gif', '7z', 'pdf', 'zip', 'ttt', 'stl', 'txt', 'html', 'mp4' 等, 使用者可以自行修改.</p>
<p><span style="background-color: #ccffcc;">FList</span> - File List - 列出可以直接在頁面編輯模式中引用的上傳檔案.</p>
<p><span style="background-color: #ccffcc;">Logout</span> - 登出頁面編輯模式.</p>
<p><span style="background-color: #ccffcc;">Convert</span> - 將動態網站中位於 config/content.htm 檔案, 透過分頁設定轉為 content 目錄中的靜態網頁.</p>
<p><span style="background-color: #ccffcc;">acp</span> - git add, git commit 與 git push, 通常只有在 localhost 或自架主機上利用網頁表單協助將倉儲改版內容推向 Github 倉儲.</p>
<p><span style="background-color: #ccffcc;">SStatic</span> - Start Static Site - 利用 Python 啟動網站伺服功能, 可以讓使用者檢查轉檔後的靜態網站內容.</p>
<p><span style="background-color: #ccffcc;">RStatic</span> - Replit Static Site URL - 僅用於 Replit 模式, 當使用者按下 SStatic 後, 可以按下 RStatic 進入當下尚未推向 Github Pages 的靜態網站.</p>
<p><span style="background-color: #ccffcc;">80</span> - 由 init.py 中 static_port 所決定的連結字串, 一般不使用 80, 只有在 Replit 中為了與動態網站共用 port, 才特別設為 80.</p>
<p></p>
<h1>Replit</h1>
<p>如果要使用<strong><span style="background-color: #ffff00;">replit</span></strong>編輯網站，必須在<strong><span style="background-color: #ffff00;">動態編輯頁面</span></strong>設定<strong><span style="background-color: #ffff00;">.ssh下的id_rsa與config</span></strong>。</p>
<p>若要簡單點請觀看<a href="https://nfuedu-my.sharepoint.com/personal/yen_nfu_edu_tw/_layouts/15/stream.aspx?id=%2Fpersonal%2Fyen%5Fnfu%5Fedu%5Ftw%2FDocuments%2F2024%2Fwcm2024%2Fvideo%2Fwcm2024%5F1a%5Fw3%5F3%5F%E5%A6%82%E4%BD%95%E5%9C%A8%20replit%20%E8%87%AA%E8%A8%AD%20%2Essh%20%E7%B6%AD%E8%AD%B7%E5%88%86%E7%B5%84%E5%80%89%E5%84%B2%2Emp4&amp;nav=eyJyZWZlcnJhbEluZm8iOnsicmVmZXJyYWxBcHAiOiJPbmVEcml2ZUZvckJ1c2luZXNzIiwicmVmZXJyYWxBcHBQbGF0Zm9ybSI6IldlYiIsInJlZmVycmFsTW9kZSI6InZpZXciLCJyZWZlcnJhbFZpZXciOiJNeUZpbGVzTGlua0NvcHkifX0&amp;ga=1&amp;referrer=StreamWebApp%2EWeb&amp;referrerScenario=AddressBarCopied%2Eview">這個影片</a>。</p>
<p></p>
<p><a href="https://replit.com">https://replit.com</a></p>
<p>利用 init_replit 指令安裝所需 Python 模組<br/><br/>chmod u+x init_replit<br/><br/>./init_replit</p>
<p dir="auto">On Replit:</p>
<p dir="auto">.replit: python3 main.py</p>
<p dir="auto">chmod u+x cms init_replit</p>
<p dir="auto">./init_replit</p>
<p dir="auto" style="padding-left: 30px;">for cmsimde_site (not needed): git submodule update --init --recursive</p>
<p dir="auto" style="padding-left: 30px;">for cmsimde: pip install flask flask_cors bs4 lxml pelican markdown gevent</p>
<p dir="auto">password generator: <a href="https://mde.tw/cmsite/content/Brython.html?src=https://gist.githubusercontent.com/mdecycu/b92b16621dd0246c352cf13d6463b333/raw/0bfa669750aba3abe48554509bbd43d65b6e5c82/hashlib_password_generator.py">https://mde.tw/cmsite/content/Brython.html?src=https://gist.githubusercontent.com/mdecycu/b92b16621dd0246c352cf13d6463b333/raw/0bfa669750aba3abe48554509bbd43d65b6e5c82/hashlib_password_generator.py</a> </p>
<p dir="auto"></p>
<p dir="auto">for IPv6 only Ubuntu:<br/><br/>.ssh 目錄中的 config, 將 SSH session 名稱設為 github.com:<br/><br/>Host github.com<br/>User git<br/>Hostname github.com<br/>ProxyCommand /usr/bin/ncat --proxy p4.cycu.org:3128 --proxy-type http %h %p<br/><br/>for Replit:<br/><br/>.ssh 目錄中的 config, 將 SSH session 名稱設為 github.com:<br/><br/>Host github.com<br/>User git<br/>Hostname github.co<br/>#since Replit works for IPv4, therefore no ProxyCommand setting needed<br/>#ProxyCommand /usr/bin/ncat --proxy p4.cycu.org:3128 --proxy-type http %h %p</p>
<p></p>
<p></p>
<h1>member</h1>
<p>完成加入小組成員登記：(貼上個人倉儲連結以示完成)</p>
<p></p>
<p><strong>組長：</strong></p>
<p><a href="https://github.com/41223150/wcm2024">41223150</a></p>
<p><strong>組員：</strong></p>
<p><a href="https://github.com/41223110/wcm2024">41223110</a></p>
<p><a href="https://github.com/zhe41223118/wcm2024">41223118</a></p>
<p><a href="https://github.com/joeisme1208/wcm2024">41223130</a></p>
<p><a href="https://github.com/41223140/wcm2024">41223140</a></p>
<p><a href="https://github.com/41223144/wcm2024">41223144</a></p>
<h1>file</h1>
<p><a href="https://nfuedu-my.sharepoint.com/:u:/g/personal/41223118_nfu_edu_tw/ETIaH2KB2dxKjbJpkxS6kO4B4eo0QaeH3iW0rxUfqBMMng?e=cINExf">portable_2024.7z</a><span> 可攜程式環境檔</span></p>
<p><a href="https://zhe41223118.github.io/wcm2024/downloads/main2.txt">main2.txt</a> <span>replit靜態執行所檔案程式</span></p>
<p><a href="https://zhe41223118.github.io/wcm2024/downloads/static.txt">static.txt</a> replit靜態執行所檔案程式</p>
<p><a href="https://nfuedu-my.sharepoint.com/:u:/g/personal/41223118_nfu_edu_tw/EUlPn3lAo5ZPn9syR_xAbHsBhiSa_EULJtAInuSbwl4HhQ?e=cPGvTr">miktex-portable.7z</a> <span>期中與期末使用</span><span><strong>LaTeX</strong>的檔案<strong><br/></strong></span></p>
<p><span><a href="https://nfuedu-my.sharepoint.com/:u:/g/personal/41223118_nfu_edu_tw/EdhJ6v0ihThGu3Mwl2doZssBdb258_r7Bv_-ie0CCYEu8g?e=nFxGVv">Wink.exe</a> 影片安裝檔</span></p>
<p></p><h1>Brython</h1>
<p><a href="https://en.wikipedia.org/wiki/Python_(programming_language)">https://en.wikipedia.org/wiki/Python_(programming_language)</a></p>
<h4>Examples:</h4>
<p style="padding-left: 30px;"><a href="https://gist.github.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d">https://gist.github.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d</a></p>
<p style="padding-left: 30px;"><a href="https://www.geeksforgeeks.org/python-programming-examples/">https://www.geeksforgeeks.org/python-programming-examples/</a></p>
<p style="padding-left: 30px;"><a href="https://www.programiz.com/python-programming/examples">https://www.programiz.com/python-programming/examples</a></p>
<p style="padding-left: 30px;"><a href="https://www.freecodecamp.org/news/python-code-examples-sample-script-coding-tutorial-for-beginners/">https://www.freecodecamp.org/news/python-code-examples-sample-script-coding-tutorial-for-beginners/</a></p>
<h4>Python Tutorial:</h4>
<p style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/">https://docs.python.org/3/tutorial/</a></p>
<p style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/introduction.html">An informal introduction to Python</a></p>
<h4>Indentation (Python 採 4 個 Spaces 縮排, 以界定執行範圍)</h4>
<h4>Variables (<a href="https://github.com/python/cpython/blob/3.11/Lib/keyword.py">Python Keywords</a>)</h4>
<h4>Comments (# 單行註解, 三個單引號或三個雙引號標註多行註解)</h4>
<h4><a href="https://docs.python.org/3/tutorial/introduction.html#numbers">Numbers</a> (整數 int(), 浮點數 float())</h4>
<h4><a href="https://docs.python.org/3/tutorial/introduction.html#strings">Strings</a> (字串)</h4>
<h4>print (Python 內建函式, <a href="https://docs.python.org/3/library/functions.html#print">print()</a> 函式)</h4>
<p><a href="https://docs.python.org/3/tutorial/controlflow.html">Python control flow tools</a></p>
<h4 style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/controlflow.html#for-statements">for</a></h4>
<h4 style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/controlflow.html#if-statements">if</a></h4>
<h4 style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/controlflow.html#the-range-function">range</a></h4>
<h4>open</h4>
<h4>read</h4>
<h4><a href="https://docs.python.org/3/tutorial/introduction.html#lists">lists</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/datastructures.html#tuples-and-sequences">tuples</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/datastructures.html#dictionaries">dictionaries</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/controlflow.html#defining-functions">functions</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/errors.html#exceptions">try ... except</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/controlflow.html#break-and-continue-statements-and-else-clauses-on-loops">break</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/controlflow.html#pass-statements">pass</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/classes.html?highlight=classes">classes</a></h4>
<p>這個頁面 demo 如何在同一頁面下納入多個線上 Ace 編輯器與執行按鈕 (<a href="/downloads/practice_html.txt">practice_html.txt</a> 動態頁面超文件).</p>
<p><a href="/downloads/practice_html.txt">practice_html.txt</a> 動態頁面超文件應該可以在啟動 Brython 時, 設定將 .py 檔案放入 downloads/py 目錄中引用.</p>
<p>亦即將所有對應的 html 也使用 Brython 產生, 然後寫為 <a href="https://docs.python.org/3/tutorial/classes.html">class</a> 後, 在範例導入時透過 <a href="https://docs.python.org/3/tutorial/classes.html#instance-objects">instance</a> 引用.</p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">&lt;!-- 啟動 Brython --&gt;
&lt;script&gt;
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
&lt;/script&gt;</pre>
<p>從 1 累加到 100:</p>
<p><button id="add1to100">1 add to 100</button></p>
<p>將 iterable 與 iterator <a href="https://home.gamer.com.tw/creationDetail.php?sn=4337438">相關說明</a>, 利用 Brython 與 Ace Editor 整理在這個頁面.</p>
<!-- 導入 brython 程式庫 -->
<p>
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
</p>
<!-- 啟動 Brython -->
<p>
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
</p>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 -->
<script src="/static/Cango-24v03-min.js"></script>
<script src="/static/gearUtils-09.js"></script>
<script src="/static/SVGpathUtils-6v03-min.js"></script>
<script src="/static/sylvester.js"></script>
<script src="/static/PrairieDraw.js"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()
Ace1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run1():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace1.editor.setValue(prog)
    Ace1.editor.scrollToRow(0)
    Ace1.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace1.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run1'].bind('click', Ace1.run)
doc['kw_show_console1'].bind('click', Ace1.show_console)
doc['kw_clear_console1'].bind('click', Ace1.clear_console)
doc['clear_bd1'].bind('click', clear_bd1)
# 呼叫函式執行
run1()
</script>
</p>
<p><!-- add 1 to 100 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add(ev):
    Ace2.editor.setValue(add_src)
    Ace2.editor.scrollToRow(0)
    Ace2.editor.gotoLine(0)
    Ace2.run()

# id 為 "add1to100" 的按鈕點按時, 執行 add 方法
doc["add1to100"].bind('click', add)
</script>
</p>
<p><!-- add 1 to 100 結束--></p>
<!-- editor1 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor1" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run1">Run</button> <button id="kw_show_console1">Output</button> <button id="kw_clear_console1">清除輸出區</button><button id="clear_bd1">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console1"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div1"></div>
<!-- editor1 結束 --><hr/><!-- ########################################## -->
<p>從 1 累加到 100 part2:</p>
<p><button id="add1to100part2">1 add to 100</button><button id="cango_three_gears">cango_three_gears</button><button id="bsnake">BSnake</button><button id="aitetris">AI Tetris</button><button id="threejsblock">Rotating Block</button></p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()
Ace3 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run2():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src2"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace3.editor.setValue(prog)
    Ace3.editor.scrollToRow(0)
    Ace3.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace3.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run2'].bind('click', Ace3.run)
doc['kw_show_console2'].bind('click', Ace3.show_console)
doc['kw_clear_console2'].bind('click', Ace3.clear_console)
doc['clear_bd2'].bind('click', clear_bd2)
# 呼叫函式執行
run2()
</script>
</p>
<p><!-- add 1 to 100 part2 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace4 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )

# 透過 Ace4 以類別建立一個通用的 button2, 可以在多個案例中將 gist 程導入編輯區

class button2:
    def __init__(self, url):
        self.url = url

    # 記得加入 event 輸入變數
    def do(self,ev):
        Ace4.editor.setValue(open(self.url).read())
        Ace4.editor.scrollToRow(0)
        Ace4.editor.gotoLine(0)
        Ace4.run()

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add2(ev):
    Ace4.editor.setValue(add_src)
    Ace4.editor.scrollToRow(0)
    Ace4.editor.gotoLine(0)
    Ace4.run()

# id 為 "add1to100part2" 的按鈕點按時, 執行 add 方法
doc["add1to100part2"].bind('click', add2)
# 以下為運用 button2 class 的通用 gist 程式導入區
################################## cango_three_gears start
cango_three_gears_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/cango_three_gears_brython_div2.py"
cango_three_gears = button2(cango_three_gears_url)
doc["cango_three_gears"].bind("click", cango_three_gears.do)
################################## cango_three_gears end
################################## bsnake start
bsnake_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/kmol_snakey.py"
bsnake = button2(bsnake_url)
doc["bsnake"].bind("click", bsnake.do)
################################## bsnake end
################################## aitetris start
aitetris_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/pygame_to_brython_tetris_ai.py"
aitetris = button2(aitetris_url)
doc["aitetris"].bind("click", aitetris.do)
################################## aitetris end
################################## threejsblock start
threejsblock_url = "https://gist.githubusercontent.com/mdecycu/2c6323eff49b496d1bafd210f3ec9707/raw/df37802f9e8a386b6424f7945af622b1cd0a9ca5/threejs_rotating_block.py"
threejsblock = button2(threejsblock_url)
doc["threejsblock"].bind("click", threejsblock.do)
################################## threejsblock end
</script>
</p>
<p><!-- add 1 to 100 part2 結束--></p>
<!-- editor2 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor2" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename2" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src2', 'kw_filename2');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run2">Run</button> <button id="kw_show_console2">Output</button> <button id="kw_clear_console2">清除輸出區</button><button id="clear_bd2">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console2"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div2"></div>
<!-- editor2 結束 --><hr/>
<p>
<script src="https://unpkg.com/three@0.144.0/build/three.js" type="text/javascript"></script>
</p>